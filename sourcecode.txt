// category controller

<?php

namespace App\Http\Controllers;

use App\Models\Category;
use Illuminate\Http\Request;

class CategoryController extends Controller
{
    // show all categories
    public function index() {
        $categories = Category::all();
        return view('admin.categories.index', ['categories' => $categories]);
    }

    // show a single category
    public function show($category_id) {
        $category = Category::findOrFail($category_id); // Assuming 'id' is the primary key of the category
        return view('admin.categories.show', compact('category'));
    }

    // show create form
    public function create() {
        return view('admin.categories.create');
    }

    // store category data
    public function store(Request $request) {

        $category = new Category();
        $category->category_name = $request->input('category_name');

        $category->save();

        return redirect()->route('categories')->with('success', 'category added successfully');
    }

    // show edit form
    public function edit($category_id) {
        $category = Category::findOrFail($category_id); // Assuming 'id' is the primary key of the category
        return view('admin.categories.edit', compact('category'));
    }

    // update category data
    public function update(Request $request, $category_id) {

        $category = Category::findOrFail($category_id);


        $category->category_name = $request->input('category_name');

        $category->save();

        return redirect()->route('categories')->with('success', 'category updated successfully');

    }

    // delete category
    public function destroy($category_id) {
        $category = Category::findOrFail($category_id);

        $category->is_deleted = 1;

        $category->save();

        return redirect()->route('categories')->with('success', 'category deleted successfully');
    }
}



// subcategory controller
<?php

namespace App\Http\Controllers;

use App\Models\Category;
use App\Models\SubCategory;
use Illuminate\Http\Request;

class SubCategoryController extends Controller
{
    // show all subcategories
    public function index() {
        $subcategories = SubCategory::all();
        return view('admin.subcategory.index', ['subcategories' => $subcategories]);
    }

    // show create form
    public function create() {
        $categories = Category::all();
        return view('admin.subcategory.create', ['categories' => $categories]);
    }

    // store subcategory data
    public function store(Request $request) {
        $subcategory = new SubCategory();

        $subcategory->subcategory_name = $request->input('subcategory_name');
        $subcategory->category = $request->input('category');

        $subcategory->save();

        return redirect()->route('subcategories')->with('success', 'category added succesfully');

    }

    // show edit form
    public function edit($subcategory_id) {
        $categories = Category::all();
        $subcategory = SubCategory::findOrFail($subcategory_id);

        return view('admin.subcategory.edit', compact('categories','subcategory'));

    }

    // update subcategory data
    public function update(Request $request, $subcategory_id) {
        $subcategory = SubCategory::findOrFail($subcategory_id);

        $subcategory->subcategory_name = $request->input('subcategory_name');
        $subcategory->category = $request->input('category');


        $subcategory->save();

        return redirect()->route('subcategories')->with('success', 'subcategory updated successfully');
    }

    // delete subcategory
    public function destroy($subcategory_id) {
        $subcategory = SubCategory::findOrFail($subcategory_id);

        $subcategory->is_deleted = 1;

        $subcategory->save();

        return redirect()->route('subcategories')->with('success', 'subcategory deleted successfully');
    }
}



// product controller
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class ProductController extends Controller
{
    //
    public function index() {

    }

    public function show() {

    }

    public function store() {

    }

    public function update() {

    }

    public function destroy() {

    }
}

